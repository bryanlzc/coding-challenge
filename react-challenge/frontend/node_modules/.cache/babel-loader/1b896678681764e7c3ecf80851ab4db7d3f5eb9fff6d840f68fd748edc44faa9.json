{"ast":null,"code":"var _jsxFileName = \"/Users/bryanlee/Documents/sq/frontend-coding-challenge/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StoreList() {\n  _s();\n  const [stores, setStores] = useState([]);\n  const [books, setBooks] = useState([]);\n  const [authors, setAuthors] = useState([]);\n  useEffect(() => {\n    // Fetch stores, books, and authors from the backend\n    fetch('http://localhost:3000/stores').then(response => response.json()).then(data => setStores((data === null || data === void 0 ? void 0 : data.data) || [])).catch(error => console.error('Error fetching stores:', error));\n    fetch('http://localhost:3000/books').then(response => response.json()).then(data => setBooks((data === null || data === void 0 ? void 0 : data.data) || [])).catch(error => console.error('Error fetching books:', error));\n    fetch('http://localhost:3000/authors').then(response => response.json()).then(data => setAuthors((data === null || data === void 0 ? void 0 : data.data) || [])).catch(error => console.error('Error fetching authors:', error));\n  }, []);\n\n  // Helper function to format the date as dd.mm.yyyy\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are 0-based\n    const year = date.getFullYear();\n    return `${day}.${month}.${year}`;\n  };\n\n  // Helper function to get books for each store (by matching book IDs)\n  const getStoreBooks = storeBooks => {\n    if (!storeBooks || !Array.isArray(storeBooks)) {\n      return [];\n    }\n    const relatedBooks = storeBooks.map(bookRel => books.find(book => book.id === bookRel.id));\n    const sortedBooks = relatedBooks.filter(book => book).sort((a, b) => b.attributes.copiesSold - a.attributes.copiesSold);\n    return sortedBooks.slice(0, 2);\n  };\n\n  // Helper function to get the author of a book (by matching author ID)\n  const getBookAuthor = book => {\n    if (!book || !book.relationships || !book.relationships.author) return 'Unknown';\n    const authorId = book.relationships.author.data.id;\n    const author = authors.find(author => author.id === authorId);\n    return author ? author.attributes.fullName : 'Unknown Author';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerWrapperStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: headerStyle,\n      children: \"Store List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: storeListStyle,\n      children: stores.map(store => {\n        var _store$attributes, _store$attributes2, _store$attributes3, _store$relationships, _store$relationships$, _store$attributes4, _store$attributes5;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: storeCardStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: storeDetailsStyle,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: ((_store$attributes = store.attributes) === null || _store$attributes === void 0 ? void 0 : _store$attributes.storeImage) || 'https://via.placeholder.com/150',\n              alt: ((_store$attributes2 = store.attributes) === null || _store$attributes2 === void 0 ? void 0 : _store$attributes2.name) || 'Unknown Store',\n              style: imageStyle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: infoContainerStyle,\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: ((_store$attributes3 = store.attributes) === null || _store$attributes3 === void 0 ? void 0 : _store$attributes3.name) || 'Unknown Store'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                style: tableStyle,\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: /*#__PURE__*/_jsxDEV(\"th\", {\n                      colSpan: \"2\",\n                      style: headerStyle,\n                      children: \"Best-Selling Books\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 75,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Book Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 78,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Author\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 79,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: getStoreBooks(((_store$relationships = store.relationships) === null || _store$relationships === void 0 ? void 0 : (_store$relationships$ = _store$relationships.books) === null || _store$relationships$ === void 0 ? void 0 : _store$relationships$.data) || []).map((book, index) => {\n                    var _book$attributes;\n                    return /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                        children: (book === null || book === void 0 ? void 0 : (_book$attributes = book.attributes) === null || _book$attributes === void 0 ? void 0 : _book$attributes.name) || 'Unknown Book'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 85,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                        children: getBookAuthor(book)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 86,\n                        columnNumber: 25\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 23\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [formatDate(((_store$attributes4 = store.attributes) === null || _store$attributes4 === void 0 ? void 0 : _store$attributes4.establishmentDate) || new Date()), \" - \", (_store$attributes5 = store.attributes) === null || _store$attributes5 === void 0 ? void 0 : _store$attributes5.website]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, store.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n// Styles\n_s(StoreList, \"K0reCU37pELjQ2rXN2HjMuDoGD4=\");\n_c = StoreList;\nconst containerWrapperStyle = {\n  textAlign: 'center',\n  padding: '20px'\n};\nconst headerStyle = {\n  fontSize: '2rem',\n  marginBottom: '20px'\n};\nconst storeListStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '20px',\n  alignItems: 'center'\n};\nconst storeCardStyle = {\n  border: '1px solid #ccc',\n  borderRadius: '10px',\n  padding: '20px',\n  width: '1500px',\n  // Set a fixed width for the store cards\n  boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n  textAlign: 'left',\n  fontSize: '25px'\n};\nconst storeDetailsStyle = {\n  display: 'flex',\n  alignItems: 'center',\n  gap: '20px'\n};\nconst imageStyle = {\n  width: '200px',\n  // Fixed width\n  height: '200px',\n  // Fixed height\n  objectFit: 'cover',\n  // Scale the image down without cropping\n  borderRadius: '50%',\n  marginBottom: '10px',\n  backgroundColor: '#f0f0f0' // Optional background color to fill empty space\n};\nconst infoContainerStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center'\n};\nconst tableStyle = {\n  width: '100%',\n  marginTop: '20px',\n  borderCollapse: 'collapse'\n};\nexport default StoreList;\nvar _c;\n$RefreshReg$(_c, \"StoreList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","StoreList","_s","stores","setStores","books","setBooks","authors","setAuthors","fetch","then","response","json","data","catch","error","console","formatDate","dateString","date","Date","day","String","getDate","padStart","month","getMonth","year","getFullYear","getStoreBooks","storeBooks","Array","isArray","relatedBooks","map","bookRel","find","book","id","sortedBooks","filter","sort","a","b","attributes","copiesSold","slice","getBookAuthor","relationships","author","authorId","fullName","style","containerWrapperStyle","children","headerStyle","fileName","_jsxFileName","lineNumber","columnNumber","storeListStyle","store","_store$attributes","_store$attributes2","_store$attributes3","_store$relationships","_store$relationships$","_store$attributes4","_store$attributes5","storeCardStyle","storeDetailsStyle","src","storeImage","alt","name","imageStyle","infoContainerStyle","tableStyle","colSpan","index","_book$attributes","establishmentDate","website","_c","textAlign","padding","fontSize","marginBottom","display","flexDirection","gap","alignItems","border","borderRadius","width","boxShadow","height","objectFit","backgroundColor","justifyContent","marginTop","borderCollapse","$RefreshReg$"],"sources":["/Users/bryanlee/Documents/sq/frontend-coding-challenge/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction StoreList() {\n  const [stores, setStores] = useState([]);\n  const [books, setBooks] = useState([]);\n  const [authors, setAuthors] = useState([]);\n\n  useEffect(() => {\n    // Fetch stores, books, and authors from the backend\n    fetch('http://localhost:3000/stores')\n      .then((response) => response.json())\n      .then((data) => setStores(data?.data || []))\n      .catch((error) => console.error('Error fetching stores:', error));\n\n    fetch('http://localhost:3000/books')\n      .then((response) => response.json())\n      .then((data) => setBooks(data?.data || []))\n      .catch((error) => console.error('Error fetching books:', error));\n\n    fetch('http://localhost:3000/authors')\n      .then((response) => response.json())\n      .then((data) => setAuthors(data?.data || []))\n      .catch((error) => console.error('Error fetching authors:', error));\n  }, []);\n\n  // Helper function to format the date as dd.mm.yyyy\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are 0-based\n    const year = date.getFullYear();\n    return `${day}.${month}.${year}`;\n  };\n\n  // Helper function to get books for each store (by matching book IDs)\n  const getStoreBooks = (storeBooks) => {\n    if (!storeBooks || !Array.isArray(storeBooks)) {\n      return [];\n    }\n    const relatedBooks = storeBooks.map(bookRel => books.find(book => book.id === bookRel.id));\n    const sortedBooks = relatedBooks.filter(book => book).sort((a,b) => b.attributes.copiesSold - a.attributes.copiesSold)\n\n    return sortedBooks.slice(0,2)\n  };\n\n  // Helper function to get the author of a book (by matching author ID)\n  const getBookAuthor = (book) => {\n    if (!book || !book.relationships || !book.relationships.author) return 'Unknown';\n    const authorId = book.relationships.author.data.id;\n    const author = authors.find(author => author.id === authorId);\n    return author ? author.attributes.fullName : 'Unknown Author';\n  };\n\n  return (\n    <div style={containerWrapperStyle}>\n      <h1 style={headerStyle}>Store List</h1>\n      <div style={storeListStyle}>\n        {stores.map((store) => (\n          <div key={store.id} style={storeCardStyle}>\n            <div style={storeDetailsStyle}>\n              <img \n                src={store.attributes?.storeImage || 'https://via.placeholder.com/150'} \n                alt={store.attributes?.name || 'Unknown Store'} \n                style={imageStyle} \n              />\n\n              {/* Store Info (name, rating, website) */}\n              <div style={infoContainerStyle}>\n                <h2>{store.attributes?.name || 'Unknown Store'}</h2>\n\n                {/* Table displaying Best-Selling Books */}\n                <table style={tableStyle}>\n                  <thead>\n                    <tr>\n                      <th colSpan=\"2\" style={headerStyle}>Best-Selling Books</th>\n                    </tr>\n                    <tr>\n                      <th>Book Name</th>\n                      <th>Author</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {getStoreBooks(store.relationships?.books?.data || []).map((book, index) => (\n                      <tr key={index}>\n                        <td>{book?.attributes?.name || 'Unknown Book'}</td>\n                        <td>{getBookAuthor(book)}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n             </div>\n            </div>\n\n            {/* Display formatted establishment date */}\n            <p>{formatDate(store.attributes?.establishmentDate || new Date())} - {store.attributes?.website}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\n// Styles\nconst containerWrapperStyle = {\n  textAlign: 'center',\n  padding: '20px',\n};\n\nconst headerStyle = {\n  fontSize: '2rem',\n  marginBottom: '20px',\n};\n\nconst storeListStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  gap: '20px',\n  alignItems: 'center',\n};\n\nconst storeCardStyle = {\n  border: '1px solid #ccc',\n  borderRadius: '10px',\n  padding: '20px',\n  width: '1500px',           // Set a fixed width for the store cards\n  boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n  textAlign: 'left',\n  fontSize: '25px'\n};\n\nconst storeDetailsStyle = {\n  display: 'flex',\n  alignItems: 'center',\n  gap: '20px',\n};\n\nconst imageStyle = {\n  width: '200px',          // Fixed width\n  height: '200px',         // Fixed height\n  objectFit: 'cover',    // Scale the image down without cropping\n  borderRadius: '50%',\n  marginBottom: '10px',\n  backgroundColor: '#f0f0f0' // Optional background color to fill empty space\n};\n\nconst infoContainerStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n};\n\nconst tableStyle = {\n  width: '100%',\n  marginTop: '20px',\n  borderCollapse: 'collapse',\n};\n\nexport default StoreList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}